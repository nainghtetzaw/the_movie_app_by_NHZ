apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'me.moallemi.advanced-build-version'

advancedVersioning {
    nameOptions {
        versionMajor 1
        versionMinor 3
        versionPatch 6
    }
    codeOptions {
        versionCodeType 'AUTO_INCREMENT_ONE_STEP'
    }
    outputOptions {
        renameOutput true
        nameFormat 'MovieApp-v${versionName}'
    }

}

def appVersionName = advancedVersioning.versionName
def appVersionCode = advancedVersioning.versionCode

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.example.the_movie_app"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField 'String','API_KEY',"\"${movieapikey}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors{
        flavorDimensions "appModule"
        def BASE_URL_FIELD = "BASE_URL_FIELD"
        def BASE_DEV_URL = "\"https://dev.movieapp.com\""
        def BASE_PROD_URL = "\"https://prod.movieapp.com\""
        def BASE_PRO_URL = "\"https://pro.movieapp.com\""
        dev {
            dimension "appModule"
            applicationIdSuffix = ".dev"
            manifestPlaceholders = [appName : "@string/app_name_dev"]
            buildConfigField 'String', BASE_URL_FIELD , BASE_DEV_URL
        }
        prod {
            dimension "appModule"
            applicationIdSuffix = ".prod"
            manifestPlaceholders = [appName : "@string/app_name_prod"]
            buildConfigField 'String', BASE_URL_FIELD , BASE_PROD_URL
        }
        pro {
            dimension "appMOdule"
            applicationIdSuffix = ".pro"
            manifestPlaceholders = [appName : "@string/app_name_pro"]
            buildConfigField 'String', BASE_URL_FIELD , BASE_PRO_URL
        }
    }
}

dependencies {
    implementation project(":shared")
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation rootProject.ext.libraries.material

    implementation rootProject.ext.libraries.gson


    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'

    //RxKotlin
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //OKHttp
    implementation "com.squareup.okhttp3:okhttp:4.1.0"

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //Swipe Refresh Layout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"


    def room_version = "2.2.5"
    def lifecycle_version = "2.2.0"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // lifecycle components
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Work Manager
    implementation "androidx.work:work-runtime:2.3.1"

    // Local Unit Tests
    testImplementation 'junit:junit:4.12'
    testImplementation "androidx.test.ext:junit-ktx:1.1.1"
    testImplementation "androidx.test:core-ktx:1.2.0"
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.1"
    testImplementation "org.mockito:mockito-core:3.1.0"
    testImplementation "org.robolectric:robolectric:4.3.1"

    // Tests that require Android Device
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation "androidx.test:core-ktx:1.2.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.1"
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation "org.mockito:mockito-android:3.1.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"

}